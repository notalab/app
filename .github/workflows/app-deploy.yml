name: APP-Deploy-STG

on: [push]

jobs:
  create_release:
    
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ steps.vars.outputs.sha_short }}
          release_name: Release ${{ steps.vars.outputs.sha_short }}
          draft: false
          prerelease: false

  release:

    name: Release Assets
    needs: create_release
    strategy:
      matrix:
        node-version: [12.x]
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm install
    - name: Build Application (Windows)
      run: npm run electron:windows:staging
      if: matrix.os == 'windows-latest'
    - name: Build Application (Darwin)
      run: npm run electron:mac:staging
      if: matrix.os == 'macos-latest'
    - name: Upload Build Artifact (WIN)
      if: matrix.os == 'windows-latest'
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./release/Nota-STG.exe
        asset_name: Nota Staging Build.exe
        asset_content_type: application/zip
    - name: Upload Build Artifact (DARWIN)
      if: matrix.os == 'macos-latest'
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./release/Nota-STG.dmg
        asset_name: Nota Staging Build.dmg
        asset_content_type: application/zip
